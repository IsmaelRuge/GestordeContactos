@page "/"

@inject IContactoService ContactoService
@inject NavigationManager NavigationManager

<h3>Contactos</h3>

@Mensage

<table class="table">
    <tbody>
        <tr>
            <td colspan="2"><a href="ContactoDetalles">Agregar Contacto</a></td>
        </tr>
    </tbody>
</table>

@if (contacto == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="4" AllowSorting="true" Data="@contacto" TItem="Contacto" ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="Contacto" Property="NombreCompleto" Title="Nombre" />
            <RadzenGridColumn TItem="Contacto" Property="Celular" Title="Celular" />
            <RadzenGridColumn TItem="Contacto" Property="Dirección" Title="Dirección" />
            <RadzenGridColumn TItem="Contacto" Title="Editar">
                <Template Context="data">
                    <RadzenLink Path="@($"/ContactoDetalles/{data.Id}")" Text="Editar"></RadzenLink>
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="Contacto" Title="Eliminar">
                <Template Context="data">
                    <RadzenLink Path="@($"/ContactoEliminar/{data.Id}")" Text="Eliminar"></RadzenLink>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}


@code{
    IEnumerable<Contacto> contacto;
    public string Mensage { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            contacto = await ContactoService.GetAll();
        }
        catch (Exception e)
        {
            Mensage = "Error..." + e.Message;
        }
    }
}